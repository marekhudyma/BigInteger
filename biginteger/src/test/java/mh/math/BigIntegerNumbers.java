package mh.math;

import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static junit.framework.TestCase.assertTrue;

/**
 * User: mhudyma
 */
public class BigIntegerNumbers {

    public static final List<String> validNumbers = new ArrayList<String>();

    {
        List<String> validNumbers = Arrays.asList(VALID_NUMBERS);
        for(String validNumber : VALID_NUMBERS){
            validNumbers.add("+" + validNumber);
            validNumbers.add("-" + validNumber);
        }
    }

    private static String VALID_NUMBERS[] = {
        //simple numbers
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "1234567890",
        "1010101010",
        //zeros
        "0",
        "000000000000000",
        "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
        "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        //zero at the beggining
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009",
        //long numbers
        "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
        "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
        "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
        "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
        "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890",
        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
        "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
        "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
        "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
        "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
        "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210"
    };

    private static String VALID_NUMBERS[] = {
            //simple numbers
            "a1",
            "2b",
            "3d",
            "4e",
            "5f",
            "6g,",
            "7h.",
            "8i",
            "9j",
            "1-0",
            "1234+567890",
            "10101_01010",
            //zeros
            "0-",
            "0000@00000000000",
            "000000#000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
            "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            //zero at the beggining
            "0~1",
            "0@2",
            "0#3",
            "0$4",
            "0%5",
            "0^6",
            "0&7",
            "0*8",
            "0(9",
            "0)000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009",
            //long numbers
            "11111,11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
            "12345.67890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
                    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
                    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
                    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" +
                    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890",
            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                    "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
                    "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
                    "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
                    "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210" +
                    "9876543210987654321098765432109876543210987654321098765432109876543210987654321098765432109876543210"
    };

}
